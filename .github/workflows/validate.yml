name: Validar Ejercicio Completo

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]
  workflow_dispatch: # Permite ejecutar manualmente el workflow

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Chequear el código
        uses: actions/checkout@v2
        with:
          repository: Akradeveloper/Selenium-exercises
          token: ${{ secrets.TOKEN_GITHUB }}
          ref: ${{ github.head_ref }}

      # Paso para verificar la estructura de los directorios en el repositorio
      - name: Verificar la estructura de directorios
        run: |
          echo "Estructura de directorios:"
          ls -R ./  # Lista la estructura de directorios

      # Paso para encontrar subcarpetas de ejercicios con package.json o pom.xml y que contengan un directorio 'src'
      - name: Encontrar subcarpetas de ejercicios
        run: |
          # Inicializar variable de carpetas válidas
          VALID_FOLDERS=""

          # Listar todas las carpetas en el directorio actual
          echo "Listando todas las carpetas en el directorio actual:"
          find . -maxdepth 1 -type d  # Muestra todas las carpetas en el nivel 1

          # Buscar las subcarpetas que contienen package.json o pom.xml
          for folder in $(find . -maxdepth 1 -type d); do
            echo "Comprobando carpeta: $folder"
            echo "Ruta absoluta de la carpeta: $(realpath $folder)"

            # Comprobar si la subcarpeta contiene package.json o pom.xml
            if [ -e "$folder/package.json" ] || [ -e "$folder/pom.xml" ]; then
              echo "Encontrado package.json o pom.xml en $folder"

              # Comprobar si la subcarpeta tiene un directorio 'src'
              if [ -d "$folder/src" ]; then
                echo "Directorio 'src' encontrado en $folder"
                # Si existe 'src', agregar la carpeta a la lista de carpetas válidas
                VALID_FOLDERS="$VALID_FOLDERS$(basename $folder) "
              else
                echo "No se encontró el directorio 'src' en $folder"
              fi
            else
              echo "No se encontró package.json ni pom.xml en $folder"
            fi
          done

          # Mostrar las subcarpetas válidas encontradas
          echo "Subcarpetas válidas encontradas: $VALID_FOLDERS"

          # Establecer la salida para usarla en pasos posteriores
          if [ -n "$VALID_FOLDERS" ]; then
            echo "folders=$VALID_FOLDERS" >> $GITHUB_ENV
          else
            echo "No se encontraron carpetas válidas con 'src'."
          fi
