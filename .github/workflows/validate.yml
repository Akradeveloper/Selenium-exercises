name: Validar Ejercicio Completo

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Chequear el código
        uses: actions/checkout@v2
        with:
          repository: Akradeveloper/Selenium-exercises
          token: ${{ secrets.TOKEN_GITHUB }}
          ref: ${{ github.head_ref }}

      # Step 2: Set PR description as an environment variable
      - name: Set PR description
        run: echo "PR_DESCRIPTION=${{ github.event.pull_request.body }}" >> $GITHUB_ENV

      # Debugging step to list files in the scripts directory
      - name: Listar directorio de scripts
        run: ls -la ./scripts/

      # Step 3: Make scripts executable
      - name: Modificar permisos de scripts
        run: chmod +x ./scripts/*.sh

      # Step 4: Analyze the PR description and save results to a file
      - name: Analizar descripción del PR
        id: analyze_pr
        run: |
          ./scripts/analyze_pr_description.sh > analysis_result.txt
          echo "ANALYSIS_RESULT=$(cat analysis_result.txt)" >> $GITHUB_ENV
          echo "Ejercicios analizados:"
          cat analysis_result.txt

      # Step 5: Use the analysis result in validation
      - name: Validar ejercicios seleccionados
        id: validate
        run: |
          ./scripts/validate_exercises.sh analysis_result.txt > validation_result.txt
          echo "VALIDATION_RESULT=$(cat validation_result.txt)" >> $GITHUB_ENV
          echo "Resultado de validación:"
          cat validation_result.txt

      # Step 6: Close the PR if validation fails
      - name: Cerrar PR si hay errores
        if: failure()
        run: |
          ./scripts/close_pr.sh "VALIDATION_FAILED"
