name: PR Validation Workflow

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

jobs:
  # Job para analizar la descripción del PR
  analyze-pr-description:
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.analyze-pr.outputs.pr_number }}
      language: ${{ steps.analyze-pr.outputs.language }}
      marked_exercises: ${{ steps.analyze-pr.outputs.marked_exercises }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run analyze-pr-description script
        id: analyze-pr
        run: |
          chmod +x ./scripts/analyze-pr-description.sh
          ./scripts/analyze-pr-description.sh "${{ github.event.pull_request.body }}" # Pasa el cuerpo del PR como parámetro

          # Establecer las variables como salidas de este paso
          echo "language=$LANGUAGE" >> $GITHUB_ENV
          echo "marked_exercises=$EXERCISES" >> $GITHUB_ENV
          echo "pr_number=${{ github.event.pull_request.number }}" >> $GITHUB_ENV

          # Además, configurar las salidas de la acción
          echo "::set-output name=language::$LANGUAGE"
          echo "::set-output name=marked_exercises::$EXERCISES"
          echo "::set-output name=pr_number::${{ github.event.pull_request.number }}"

      - name: Upload PR information as artifact
        uses: actions/upload-artifact@v3
        with:
          name: pr_info
          path: pr_info.txt

  # Job para validar los ejercicios
  validate-pr:
    needs: analyze-pr-description
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download PR information
        uses: actions/download-artifact@v3
        with:
          name: pr_info
          path: .

      - name: Extract PR information from artifact
        run: |
          # Leer el contenido del archivo descargado para obtener las variables
          PR_INFO=$(cat pr_info.txt)

          # Extraer las variables del archivo usando comandos bash
          LANGUAGE=$(echo "$PR_INFO" | grep "language=" | cut -d '=' -f2)
          EXERCISES=$(echo "$PR_INFO" | grep "marked_exercises=" | cut -d '=' -f2)
          PR_NUMBER=$(echo "$PR_INFO" | grep "pr_number=" | cut -d '=' -f2)

          echo "language=$LANGUAGE"
          echo "marked_exercises=$EXERCISES"
          echo "pr_number=$PR_NUMBER"

      - name: Run validate-pr script
        id: validate-pr
        run: |
          # Ahora que las variables están definidas, las pasamos al script
          chmod +x ./scripts/validate-pr.sh
          ./scripts/validate-pr.sh "$LANGUAGE" "$EXERCISES" # Pasa el lenguaje y ejercicios como parámetros

          # Guardar los resultados del script
          echo "error_flag=${ERROR_FLAG}" > validation_result.txt
          echo "error_messages=${ERROR_MESSAGES}" >> validation_result.txt

      - name: Upload validation results as artifact
        uses: actions/upload-artifact@v3
        with:
          name: validation_results
          path: validation_result.txt

          # Job para publicar los resultados en el PR
  post-results:
    needs: validate-pr
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download validation results
        uses: actions/download-artifact@v3
        with:
          name: validation_results
          path: .

      - name: Extract validation results from artifact
        run: |
          # Leer el contenido del archivo descargado para obtener las variables
          VALIDATION_RESULTS=$(cat validation_result.txt)

          # Extraer las variables del archivo usando comandos bash
          ERROR_FLAG=$(echo "$VALIDATION_RESULTS" | grep "error_flag=" | cut -d '=' -f2)
          ERROR_MESSAGES=$(echo "$VALIDATION_RESULTS" | grep "error_messages=" | cut -d '=' -f2)
          PR_NUMBER=$(echo "$VALIDATION_RESULTS" | grep "pr_number=" | cut -d '=' -f2)

          echo "error_flag=$ERROR_FLAG"
          echo "error_messages=$ERROR_MESSAGES"
          echo "pr_number=$PR_NUMBER"

      - name: Run post-results script
        run: |
          # Ahora que las variables están definidas, las pasamos al script
          chmod +x ./scripts/post-results.sh
          ./scripts/post-results.sh "$ERROR_FLAG" "$ERROR_MESSAGES" "$PR_NUMBER" # Pasa el error_flag, error_messages y pr_number como parámetros
  close-pr:
    needs: post-results
    if: ${{ needs.post-results.outputs.error_flag == '1' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract PR number from previous job
        run: |
          # Extraer PR number desde la variable del trabajo anterior
          PR_NUMBER="${{ needs.post-results.outputs.pr_number }}"
          echo "PR number: $PR_NUMBER"

      - name: Run close-pr script
        run: |
          chmod +x ./scripts/close-pr.sh
          ./scripts/close-pr.sh "$PR_NUMBER" # Pasa el pr_number como parámetro
